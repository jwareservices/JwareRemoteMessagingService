package org.jware.task;/* * Copyright (C) 2014 J. Paul Jackson <jwareservices@gmail.com> * * This program is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program.  If not, see <http://www.gnu.org/licenses/>. */import java.util.*;import org.jware.util.Queue;/* * File: Task.java * * @author J. Paul Jackson <jwareservices@gmail.com> *  * @version 1.3 July. 4, 1998 * * Updated august, 2014 */public abstract class Task extends Object implements Runnable {    protected Thread taskThread;    boolean async;    int cycle;    /**     * Constructor: creates, initializes and starts the tasks thread. async     * Tells this thread to run forever or not. cycle is how long to sleep.     */    public Task(boolean async, int cycle) {        this.async = async;        this.cycle = cycle;        taskThread = new Thread(this);        taskThread.setDaemon(true);        taskThread.start();    }    public void run() {        do {            doTask();            try {                Thread.sleep(cycle);            } catch (InterruptedException e) {                return;            }        } while (async);    }    public abstract void doTask();}